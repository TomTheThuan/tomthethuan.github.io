[{"id":0,"href":"/post/numberbasereview/","title":"二进制、十进制、十六进制的基本知识","section":"Posts","content":" Binary System Binary Units in binary: Understanding Denary / Decimal system How the number system works Convert binary to denary Convert denary to binary Hexadecimal System Understanding Hexadecimal Why are we using Hex? The uses of Hexadecimal in computing Hexadecimal in HTML colours Hexadecimal in MAC address Hexadecimal in Machine Code and Assemble Language Binary System\r#\rLearning Ojectives\ndefine the terms bit, nibble, byte, kilobyte, megabyte, gigabyte, terabyte Understand that data needs to be converted into a binary format to be processed by a computer Convert positive denary whole numbers into 8-bit or 16-bit binary numbers and vice vers a Explain the use 0f binary codes in computer registers Binary\r#\rComputers read and interpret data differently. Computers only understand data in a binary form, which is 1s and 0s.\nComputers anr simply a collection of billions of switches which can be either on (represent by the digit 1) and off (represent by the digit 0).\nIn binary we have only two digits which are 1 and 0, so we can call this number system \u0026lsquo;base-2\u0026rsquo;.\nA bit (short for \u0026lsquo;Binary Digit\u0026rsquo;) is the smallest unit of data in a computer and has a single binary value of 1 or 0.\nUnits in binary:\r#\r1 bit = a single 0 or 1 1 byte = 8 bits = 1 character of text = 2 nibbles 1 KB = 1024 bytes 1 MB = 1024 KB or 1024 x 1024 bytes 1 GB = 1024 MB 1 TB = 1024 GB A sence of scale\nFile Size One character of text 1 byte A full page of text 30 KB One small digital colour photograph 3 MB Music CD 600 MB A DVD 4.5 GB Hard disk 1 TB Understanding Denary / Decimal system\r#\rFor humans to be able to work with computers we need ways of representing all of the data we use in binary.\nComputers use a binary number system consisting of only 0s and 1s.\nEverything that a computer needs to process must beconverted into a binary format.\nThis format is used for storing numbers, text, images, sound and program instructions.\nHumans use natural numbers daily and can be described as denary, decimal or base-10 system of numbers.\nHow the number system works\r#\rThe example of 2703 in denary:\n$2703_{10} = 21000 + 7100 + 010 + 31$\nIn this example, digit 2 represents there are 2 thousands, digit 7 represents there are 7 hundreds, no tens because the digit on tens is 0, and 3 ones.\n$$ 2703_{10} = 21000 + 7100 + 010 + 31 = 210^3 + 710^2 + 010^1 + 310^0 $$\nAnd also, binary works in the same way, but change the base.\n$$ 00111001_2 = 02^7 + 02^6 + 12^5 + 12^4 + 12^3 + 02^2 + 02^1 + 02^0 = 57_{10} $$\nConvert binary to denary\r#\r$$ 00111001_2 = 02^7 + 02^6 + 12^5 + 12^4 + 12^3 + 02^2 + 02^1 + 02^0 = 57_{10} $$\nAll the digits time their place value then add them together.\nConvert denary to binary\r#\rbase number R 2 21 1 2 10 0 2 5 1 2 2 0 2 1 1 Final result: $21_{10} = 10101_2$\nR represents the remainder of the number beside it.\nCombine the lowest number from R column to the highest.\nMore examples:\nbase number R 2 37 1 2 18 0 2 9 1 2 4 0 2 2 0 2 1 1 $37_{10} = 100101_2$\nbase number R 2 84 0 2 42 0 2 21 1 2 10 0 2 5 1 2 2 0 2 1 1 $84_{10} = 1010100_2$\nHexadecimal System\r#\rUnderstanding Hexadecimal\r#\rEven throught all data inside a computer is manipulated using binary code. If we should ever need to document binary code outside of the system. It is helpful to understand the internal code.\nA Hexadecimal system is a number system that is more effective for documentation purposes.\nHexadecimal number are in base-16 system and therefore uses 16 symbols (numbers and characters) to represent numbers.\nBase-16 use number 0~9 and letters A~F\nA - 10 B - 11 C - 12 D - 13 E - 14 F - 15 Why are we using Hex?\r#\rA hexadecimal value is much easier to read and remember than a string of binary digits.\nIt is quicker to write or type, since a hex digit takes up only one character, not four digits in binary.\nThere is less chance of makin an error when typing hex characers than a string of 1s and0s.\nIt is easy to convert to and from binary.\nThe uses of Hexadecimal in computing\r#\rMedia Access Conrtol Defining colours Debugging Assemble Language and Machine Code Hexadecimal in HTML colours\r#\rColours are defining in HTML using the hexadecimal format and are represented using 6 digits or symbols (characters or numbers).\nHTML (HyperText Markup Language) is the most basic building block of the Web. It defines the meaning and structure of web content.\nHelpful links for get more informations about HTML: HTML 30 minutes introduction tutrial HTML tutorial\n$$ #FFFFFF $$\nFrist two digits represent the amount of red in the colour (in he range of 00 to FF, or 000 to 255 in decimal)\nNext two digits represent the amount of gree in he colour.\nFinal two digits represent the amount of blue in the colour\nBy changing the intensity (amount) of red, green and blue, we can create almost any colour.\nIn the colour $#00FF80$, there are no red in this this colour, $FF$ green and $80$ blue.\nHexadecimal in MAC address\r#\rThe Media Access Control (MAC) somtimes called hardware address, is a 12 digit number used to uniquely identity computers or devices.\nThese numbers are physically burned into the netbook hardware during the manufacturing process, or stored in firmware, and design to not be modified. They are usually written in hexadecimal format.\nAn example of a MAC address would be 00-A3-63-84-45-E6.\nThe first 6 digits identity the manufacturer while the others give the serial number or device ID.\nHexadecimal in Machine Code and Assemble Language\r#\rMachine code Assemble codes are ow-level programming language. This means thay can be used quickly by a computer. They are languages that computers can interpret and understand.\nAssemble code used hexadecimal.\nUsing hexadecimal makes it much easier, faster and more error-free to write code compared to machine code.\nUsing machine code is very difficult and it takes a long time to type in values. It is also very easy to mistype the digits in a \u0026lsquo;sea of 0s and 1s\u0026rsquo;.\n"},{"id":1,"href":"/about/","title":"About","section":"Computer Science Notes","content":"\rAbout\r#\r"},{"id":2,"href":"/post/hexuses/","title":"十六进制的用途","section":"Posts","content":"计算机只能使用二进制数据。 虽然计算机科学家可以使用二进制，但他们发现十六进制更方便使用。 这是因为一个十六进制数字代表四个二进制数字。 复杂的二进制数，如0000111111101，可以用十六进制写成21FD。\n十六进制数对人类来说更容易记住、复制和处理。 以下是十六进制系统的四种用途：\n表示错误码 表示MAC地址 表示IPv6地址 表示HTML 颜色代码 错误码\r#\r错误代码通常显示为十六进制值。这些数字指的是错误的内存位置，通常由计算机自动生成。\nMAC地址\r#\r媒体访问控制（MAC）地址是指唯一标识网络上设备的数字。MAC地址是指作为设备一部分的网络接口卡（NIC）。MAC地址很少更改，因此无论设备在哪里，都可以始终被识别。\nMAC地址通常由48位组成，显示为6组两个十六进制数字（尽管也存在64位地址）：\nNN - NN - NN - DD - DD - DDorNN:NN:NN:DD:DD:DD\n其中前半部分NN - NN - NN是设备制造商的身份编号，后半部分DD - DD - DD是设备的序列号。\n例如：00 - 1C - B3 - 4F - 25 - FE 是苹果公司生产的设备的MAC地址（代码：001CB3），序列号为：4F25FE。MAC地址中经常使用小写十六进制字母：00-1c-b3-4f-25-fe。其他制造商识别号包括：\n00 – 14 – 22，用于识别戴尔制造的设备 00 – 40 – 96，用于识别思科制造的设备 00 – a0 – c9，用于识别英特尔制造的设备\nIPv6地址\r#\r每个连接到网络的设备都有一个称为互联网协议（IP）地址的地址。IPv4地址是以十进制（109.108.158.1）或十六进制（77.76.9e.01）形式书写的32位数字。通过采用IPv6，IPv4最近得到了改进。IPv6地址是一个128位数字，分解为16位块，由十六进制数字表示。例如：\na8fb:7a88:fff0:0fff:3d21:2085:66fb:f0fa\n请注意，IPv6使用冒号（：）分割某一段数字，而不是IPv4中使用的小数点（.）。\nHTML颜色代码\r#\r超文本标记语言（HTML）用于编写和开发网页。HTML不是一种编程语言，而只是一种标记语言。标记语言用于文本的处理、定义和呈现（例如，指定文本的颜色）。\nHTML使用\u0026lt;tags\u0026gt;，用于将一段文本括起来，例如，\u0026lt;h1\u0026gt;和\u0026lt;/h1\u0026gt;包围顶级标题。两个标签之间的任何内容都被定义为顶级标题级别。以下是HTML代码的简短示例（不要求完全掌握）：\n\u0026lt;h1 style=\u0026#34;color:#FF0000;\u0026#34;\u0026gt;This is a red heading\u0026lt;/h1\u0026gt; \u0026lt;h2 style=\u0026#34;color:#00FF00;\u0026#34;\u0026gt;This is a green heading\u0026lt;/h2\u0026gt; \u0026lt;h3 style=\u0026#34;color:#0000FF;\u0026#34;\u0026gt;This is a blue heading\u0026lt;/h3\u0026gt; HTML通常用于表示计算机屏幕上的文本颜色。所有颜色都可以由三种原色（红色、绿色和蓝色）的不同组合组成。每种颜色（红色、绿色和蓝色）的不同强度由其十六进制值决定。这意味着不同的十六进制值代表不同的颜色：\n以下图表显示了可以通过改变红色、绿色和蓝色原色的十六进制“强度”来选择的各种颜色。颜色FF9966被选中作为示例：\n在HTML代码中，#符号总是在十六进制值之前。颜色代码总是六个十六进制数字，代表红色、绿色和蓝色组件。红色可能有256个值，绿色有256个值，蓝色有256个值，总共有256×256×256（即16581375）的可能颜色。\n"}]